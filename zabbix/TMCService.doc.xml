<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZabbixAgent</name>
    </assembly>
    <members>
        <member name="T:ZabbixAgent.Counters.AbstractCounter">
            <summary>
            Abstract implementation of a counter. This should be used for implementing counters.
            </summary>
        </member>
        <member name="T:ZabbixAgent.Counters.FileExist">
            <summary>
            Checks if a file exist. Return 1 if true else 0 
            </summary>
        </member>
        <member name="T:ZabbixAgent.Counters.FileTime">
            <summary>
            Gets the last updated timestamp for a file. ( Last modified )
            Returns DD-MM-YY HH:SS
            </summary>
        </member>
        <member name="T:ZabbixAgent.Counters.Perfcounter">
            <summary>
            Summary description for Perfcounter.
            </summary>
            
        </member>
        <member name="T:ZabbixAgent.Counters.RemoteUpdate">
            <summary>
            Summary description for RemoteUpdate.
            </summary>
        </member>
        <member name="T:ZabbixAgent.Counters.ServiceState">
            <summary>
            Summary description for ServiceState.
            </summary>
        </member>
        <member name="T:ZabbixAgent.Counters.SQLSelect">
            <summary>
            Counter for getting aggregated values from database.
            </summary>
        </member>
        <member name="M:ZabbixAgent.Counters.SQLSelect.#ctor(System.String)">
            <summary>
            Constructor for SQLSelect. Set configuration from config file and sets sql query to be used for getValue.
            </summary>
            <param name="sqlquery"></param>
        </member>
        <member name="M:ZabbixAgent.Counters.SQLSelect.getValue">
            <summary>
            Return scalar value from SQL query.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZabbixAgent.Counters.UnknownCounter">
            <summary>
            Summary description for UnknownCounter.
            </summary>
        </member>
        <member name="T:ZabbixAgent.Counters.VersionCounter">
            <summary>
            Summary description for Version.
            </summary>
        </member>
        <member name="T:ZabbixAgent.Active">
            <summary>
            Active communication between server and agent implementation.
            </summary>
        </member>
        <member name="T:ZabbixAgent.Class1">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:ZabbixAgent.Class1.Main(System.String[])">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="M:ZabbixAgent.Configuration.GetConfigurationByString(System.String)">
            <summary>
            Returns a configuration parameter from configuration file as a string.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:ZabbixAgent.Connection">
            <summary>
            Connection singleton. 
            </summary>
        </member>
        <member name="T:TMCService.ProjectInstaller">
            <summary>
            Summary description for ProjectInstaller.
            </summary>
        </member>
        <member name="F:TMCService.ProjectInstaller.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:TMCService.ProjectInstaller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:TMCService.ProjectInstaller.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ZabbixAgent.Tunneler">
            <summary>
            Summary description for Tunneler.
            </summary>
        </member>
        <member name="T:UpdateService">
            <remarks/>
        </member>
        <member name="M:UpdateService.#ctor">
            <remarks/>
        </member>
        <member name="M:UpdateService.getNewVersionLink(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:UpdateService.BegingetNewVersionLink(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:UpdateService.EndgetNewVersionLink(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="T:ZabbixAgent.WorkJob">
            <summary>
            WorkJob is used for transfering parametres to threads.
            </summary>
        </member>
        <member name="T:ZabbixAgent.WorkJobAge">
            <summary>
            Summary description for WorkJobAge.
            </summary>
        </member>
        <member name="F:ZabbixAgent.WorkJobAge.key">
            <summary>
            Counter name from Zabbix.
            </summary>
        </member>
        <member name="F:ZabbixAgent.WorkJobAge.age">
            <summary>
            Age integer which will be increased.
            </summary>
        </member>
        <member name="F:ZabbixAgent.WorkJobAge.tooOld">
            <summary>
            The param will be set when thread should die.
            </summary>
        </member>
        <member name="M:ZabbixAgent.WorkJobAge.#ctor(System.String,System.Int64)">
            <summary>
            Initialize the age with show old it is and what counter it represents. 
            </summary>
            <param name="key">Countername.</param>
            <param name="age">Start age of thread.</param>
        </member>
        <member name="M:ZabbixAgent.WorkJobAge.increaseage">
            <summary>
            Increase age by one. 
            </summary>
        </member>
        <member name="M:ZabbixAgent.WorkJobAge.resetage">
            <summary>
            Resets the age to 0. ( Keeps the thread alive )  
            </summary>
        </member>
        <member name="T:ZabbixAgent.WorkPool">
            <summary>
            Summary description for WorkPool.
            </summary>
        </member>
        <member name="T:ZabbixAgent.WorkThread">
            <summary>
            WorkThread is the thread which execute a single counter.
            </summary>
        </member>
    </members>
</doc>
